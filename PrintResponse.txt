package menu;

public class PrintResponse {
	public static void printInvalidFormat () {
		System.out.println(Response.invalidFormat);
	}
	public static void printNotLoginedYet () {
		System.out.println(Response.notLoginedYet);
	}
	public static void printMenuNavigationError () {
		System.out.println(Response.menuNavigationError);
	}
	public static void printSuccessfulUserCreation () {
		System.out.println(Response.successfulUserCreation);
	}
	public static void printNoUserExists () {
		System.out.println(Response.noUserExists);
	}
	public static void printWrongPasswordInLogin () {
		System.out.println(Response.wrongPasswordInLogin);
	}
	public static void printSuccessfulLogout () {
		System.out.println(Response.successfulLogout);
	}
	public static void printSuccessfulNicknameChange () {
		System.out.println(Response.successfulNicknameChange);
	}
	public static void printSuccessfulPasswordChange () {
		System.out.println(Response.successfulPasswordChange);
	}
	public static void printWrongPasswordInChange () {
		System.out.println(Response.wrongPasswordInChange);
	}
	public static void printEqualityOfCurrentAndNewPassword () {
		System.out.println(Response.equalityOfCurrentAndNewPassword);
	}
	public static void printSuccessfulDeckCreation () {
		System.out.println(Response.successfulDeckCreation);
	}
	public static void printSuccessfulDeckDeletion () {
		System.out.println(Response.successfulDeckDeletion);
	}
	public static void printSuccessfulDeckActivation () {
		System.out.println(Response.successfulDeckActivation);
	}
	public static void printSuccessfulCardAddition () {
		System.out.println(Response.successfulCardAddition);
	}
	public static void printNoCardExistsInAddition () {
		System.out.println(Response.noCardExistsInAddition);
	}
	public static void printSuccessfulCardRemovation () {
		System.out.println(Response.successfulCardRemovation);
	}
	public static void printNoCardExistToBuy () {
		System.out.println(Response.noCardExistToBuy);
	}
	public static void printLackOfMoney () {
		System.out.println(Response.lackOfMoney);
	}
	public static void printNoUserExistToPlayWith () {
		System.out.println(Response.noUserExistToPlayWith);
	}
	public static void printNonSupportiveRound () {
		System.out.println(Response.nonSupportiveRound);
	}
	public static void printInvalidSelection () {
		System.out.println(Response.invalidSelection);
	}
	public static void printSuccessfulCardSelection () {
		System.out.println(Response.successfulCardSelection);
	}
	public static void printNoCardInPosition () {
		System.out.println(Response.noCardInPosition);
	}
	public static void printNoCardSelected () {
		System.out.println(Response.noCardSelected);
	}
	public static void printSuccessfulCardDeselection () {
		System.out.println(Response.successfulCardDeselection);
	}
	public static void printUnableToSummonCard () {
		System.out.println(Response.unableToSummonCard);
	}
	public static void printSummonInWrongPhase () {
		System.out.println(Response.summonInWrongPhase);
	}
	public static void printFullnessOfMonsterCardZone () {
		System.out.println(Response.fullnessOfMonsterCardZone);
	}
	public static void printUnableToSummonInTurn () {
		System.out.println(Response.unableToSummonInTurn);
	}
	public static void printSuccessfulSummon () {
		System.out.println(Response.successfulSummon);
	}
	public static void printNoCardToTribute () {
		System.out.println(Response.noCardToTribute);
	}
	public static void printNoMonsterOnAddress () {
		System.out.println(Response.noMonsterOnAddress);
	}
	public static void printNoMonsterOnAdresses () {
		System.out.println(Response.noMonsterOnAdresses);
	}
	public static void printUnabletoSetCard () {
		System.out.println(Response.unabletoSetCard);
	}
	public static void printSetCardInWrongPhase () {
		System.out.println(Response.setCardInWrongPhase);
	}
	public static void printSuccessfulCardSetting () {
		System.out.println(Response.successfulCardSetting);
	}
	public static void printUnableToChangePositionOfCard () {
		System.out.println(Response.unableToChangePositionOfCard);
	}
	public static void printCardInWantedPosition () {
		System.out.println(Response.cardInWantedPosition);
	}
	public static void printUnableToChangePositionInTurnTwice () {
		System.out.println(Response.unableToChangePositionInTurnTwice);
	}
	public static void printChangeMonsterCardModeInWrongPhase () {
		System.out.println(Response.changeMonsterCardModeInWrongPhase);
	}
	public static void printSuccessfulMonserCardPositionChange () {
		System.out.println(Response.successfulMonserCardPositionChange);
	}
	public static void printUnableToFlipSummonCard () {
		System.out.println(Response.unableToFlipSummonCard);
	}
	public static void printFlipSummonInWrongPhase () {
		System.out.println(Response.flipSummonInWrongPhase);
	}
	public static void printSuccessfulFlipSummon () {
		System.out.println(Response.successfulFlipSummon);
	}
	public static void printUnableToAttack () {
		System.out.println(Response.unableToAttack);
	}
	public static void printAttackInWrongPhase () {
		System.out.println(Response.attackInWrongPhase);
	}
	public static void printCardAttackedBefore () {
		System.out.println(Response.cardAttackedBefore);
	}
	public static void printNoCardToAttackWith () {
		System.out.println(Response.noCardToAttackWith);
	}
	public static void printDestructionOfTwoSideCards () {
		System.out.println(Response.destructionOfTwoSideCards);
	}
	public static void printDestructionOfDefensePositionMonster () {
		System.out.println(Response.destructionOfDefensePositionMonster);
	}
	public static void printNoDestruction () {
		System.out.println(Response.noDestruction);
	}
	public static void printNonSpellCardsToActivateEffect () {
		System.out.println(Response.nonSpellCardsToActivateEffect);
	}
	public static void printUnableToActivateEffectOnTurn () {
		System.out.println(Response.unableToActivateEffectOnTurn);
	}
	public static void printUnableToActivateCardTwice () {
		System.out.println(Response.unableToActivateCardTwice);
	}
	public static void printFullnessOfSpellCardZone () {
		System.out.println(Response.fullnessOfSpellCardZone);
	}
	public static void printUnfinishedPreprationOfSpell () {
		System.out.println(Response.unfinishedPreprationOfSpell);
	}
	public static void printSuccessfulSpellActivation () {
		System.out.println(Response.successfulSpellActivation);
	}
	public static void printSetSpellInWrongPhase () {
		System.out.println(Response.setSpellInWrongPhase);
	}
	public static void printSuccessfulSpellSetting () {
		System.out.println(Response.successfulSpellSetting);
	}
	public static void printAskToActivateSpellOrTrap () {
		System.out.println(Response.askToActivateSpellOrTrap);
	}
	public static void printWrongTurnToActivateSpellOrTrap () {
		System.out.println(Response.wrongTurnToActivateSpellOrTrap);
	}
	public static void printSuccessfulSpellOrTrapActivation () {
		System.out.println(Response.successfulSpellOrTrapActivation);
	}
	public static void printUnableToRitualSummonMonster () {
		System.out.println(Response.unableToRitualSummonMonster);
	}
	public static void printEmergencyRitualSummon () {
		System.out.println(Response.emergencyRitualSummon);
	}
	public static void printUnequalityOfLevelsOfSelectedAndRitualMonster () {
		System.out.println(Response.unequalityOfLevelsOfSelectedAndRitualMonster);
	}
	public static void printUnableToSpecialSummonMonster () {
		System.out.println(Response.unableToSpecialSummonMonster);
	}
	public static void printEmergencySpecialSummon () {
		System.out.println(Response.emergencySpecialSummon);
	}
	public static void printEmptinessOfGraveyard () {
		System.out.println(Response.emptinessOfGraveyard);
	}
	public static void printUnableToShowOpponentCard () {
		System.out.println(Response.unableToShowOpponentCard);
	}
}